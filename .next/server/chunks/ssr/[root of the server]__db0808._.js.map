{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/LENOVO/Desktop/allProject/habibiParts-main/app/store/page.tsx"],"sourcesContent":["import { createServerComponentClient } from '@supabase/auth-helpers-nextjs'\nimport { cookies } from 'next/headers'\nimport { unstable_noStore as noStore } from 'next/cache'\n\nexport const dynamic = 'force-dynamic'\n\nexport default async function StorePage() {\n  noStore()\n\n  // Debugging setup\n  const debugInfo = {\n    timestamp: new Date().toISOString(),\n    nodeEnv: process.env.NODE_ENV,\n    supabaseUrl: process.env.SUPABASE_URL,\n    supabaseKey: process.env.SUPABASE_ANON_KEY ? '***' + process.env.SUPABASE_ANON_KEY.slice(-4) : 'MISSING'\n  }\n\n  console.log('[Debug] Initializing with:', debugInfo)\n\n  try {\n    // 1. Verify cookies are available\n    const cookieStore = cookies()\n    console.log('[Debug] Cookie store:', (await cookieStore).getAll())\n\n    // 2. Initialize Supabase client\n    const supabase = createServerComponentClient({ cookies: () => cookieStore })\n    if (!supabase) {\n      throw new Error('Supabase client initialization failed')\n    }\n\n    // 3. Verify basic Supabase functionality\n    console.log('[Debug] Testing auth.getSession()...')\n    const { data: session, error: sessionError } = await supabase.auth.getSession()\n    console.log('[Debug] Session:', session, 'Error:', sessionError)\n\n    // 4. Check if tables are accessible\n    console.log('[Debug] Listing tables...')\n    const { data: tables, error: tablesError } = await supabase\n      .from('pg_tables')\n      .select('tablename')\n      .ilike('tablename', '%habibi%')\n      .limit(1)\n    console.log('[Debug] Tables:', tables, 'Error:', tablesError)\n\n    // 5. Minimal test query\n    console.log('[Debug] Running test query...')\n    const testQuery = await supabase\n      .from('Habibi')\n      .select('id')\n      .limit(1)\n      .single()  // Force single result\n    \n    if (testQuery.error) {\n      console.error('[Debug] Full test query error:', {\n        ...testQuery.error,\n        stack: new Error().stack,\n        supabaseStatus: testQuery.status,\n        supabaseStatusText: testQuery.statusText\n      })\n      throw testQuery.error\n    }\n\n    // Main query (only proceed if test succeeds)\n    console.log('[Debug] Running main query...')\n    const { data: products, error } = await supabase\n      .from('Habibi')\n      .select('id, title, price, description, imag')\n      .order('id', { ascending: false })\n\n    if (error) throw error\n\n    return (\n      <div className=\"container mx-auto p-4\">\n        <h1 className=\"text-2xl font-bold mb-6\">محصولات</h1>\n        {products && products.length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            {products.map(product => (\n              <div key={product.id} className=\"border p-4 rounded-lg\">\n                <h2 className=\"font-semibold\">{product.title}</h2>\n                <p className=\"text-gray-600\">\n                  {product.price?.toLocaleString('fa-IR')} تومان\n                </p>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p className=\"text-center py-8\">هیچ محصولی یافت نشد</p>\n        )}\n      </div>\n    )\n  } catch (err) {\n    const error = err as Error\n    console.error('[Debug] Complete error analysis:', {\n      name: error.name,\n      message: error.message,\n      stack: error.stack,\n      constructor: error.constructor?.name,\n      prototype: Object.getPrototypeOf(error),\n      debugInfo\n    })\n\n    return (\n      <div className=\"container mx-auto p-4 text-red-500 text-center\">\n        <h2 className=\"text-xl font-bold\">خطا در بارگذاری محصولات</h2>\n        <p>لطفاً با پشتیبانی تماس بگیرید</p>\n        <div className=\"mt-4 p-4 bg-red-50 rounded-lg\">\n          <p className=\"text-sm font-mono\">Error: {error.message || 'Unknown error'}</p>\n          {debugInfo.nodeEnv === 'development' && (\n            <pre className=\"text-xs mt-2 overflow-auto\">\n              {JSON.stringify(debugInfo, null, 2)}\n            </pre>\n          )}\n        </div>\n      </div>\n    )\n  }\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}